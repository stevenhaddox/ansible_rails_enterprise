---
- name: Set user's $HOME variable
  shell: chdir=~ pwd
  register: HOME
  ignore_errors: yes
  changed_when: HOME.rc != 0

#
# Users
#

- name: Create default users
  user: name={{item}} password={{password}}
  with_items:
    - "{{deployer}}"
    - "{{sysadmin}}"

#
# authorized_keys
#

- name: Create users' .ssh folder
  file: dest=/home/{{item}}/.ssh owner={{item}} state=directory
  with_items:
    - "{{deployer}}"
    - "{{sysadmin}}"

- name: Create root .ssh folder if it doesn't exist
  file: dest=/root/.ssh owner=root state=directory

- name: Check for authorized_keys file
  stat: path=/root/.ssh/authorized_keys
  register: authorized_keys

- name: Create authorized_key file if it doesn't exist
  when: authorized_keys.stat.exists == False
  command: "curl https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub -o /root/.ssh/authorized_keys"

- name: Permissions for .ssh directory
  file: dest=/root/.ssh mode=0700

- name: Permissions for authorized_keys
  file: dest=/root/.ssh/authorized_keys mode=0600

- name: Copy authorized_keys from root to new users
  command: cp /root/.ssh/authorized_keys /home/{{item}}/.ssh/authorized_keys creates=/home/{{item}}/.ssh/authorized_keys
  with_items:
    - "{{deployer}}"
    - "{{sysadmin}}"

- name: Set permissions on authorized_keys
  file: path=/home/{{item}}/.ssh/authorized_keys owner={{item}} mode=0644
  with_items:
    - "{{deployer}}"
    - "{{sysadmin}}"

#
# iptables
#

- name: Copy iptables script
  template: src=firewall_rules.sh.j2 dest={{HOME.stdout}}/firewall_rules.sh mode=755

- name: Install iptables (RedHat based)
  action: yum name='iptables' state=installed
  when: "'{{ansible_pkg_mgr}}' == 'yum'"

- name: Setup iptables
  shell: "PATH=/sbin:${PATH} {{src_bash}} {{HOME.stdout}}/firewall_rules.sh"
  register: iptables_script

- name: Set iptables to autostart on boot
  command: /sbin/chkconfig iptables on

- name: iptables running
  service: name=iptables state=started
